
package gossip.stat.client.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.0
 * 
 */
@WebService(name = "StatServer", targetNamespace = "http://server.stat.gossip/")
public interface StatServer {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "cleanup", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.Cleanup")
    @ResponseWrapper(localName = "cleanupResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.CleanupResponse")
    public void cleanup();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBootstrapPort", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetBootstrapPort")
    @ResponseWrapper(localName = "getBootstrapPortResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetBootstrapPortResponse")
    public Integer getBootstrapPort(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param id
     * @param edgeList
     */
    @WebMethod
    @RequestWrapper(localName = "sendTopology", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendTopology")
    @ResponseWrapper(localName = "sendTopologyResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendTopologyResponse")
    public void sendTopology(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "edgeList", targetNamespace = "")
        List<String> edgeList);

    /**
     * 
     * @param id
     * @param edgeList
     */
    @WebMethod
    @RequestWrapper(localName = "sendList", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendList")
    @ResponseWrapper(localName = "sendListResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendListResponse")
    public void sendList(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "edgeList", targetNamespace = "")
        List<String> edgeList);

    /**
     * 
     * @param id
     * @param lastMessageID
     * @param edgeList
     */
    @WebMethod
    @RequestWrapper(localName = "sendList2", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendList2")
    @ResponseWrapper(localName = "sendList2Response", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.SendList2Response")
    public void sendList2(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "edgeList", targetNamespace = "")
        List<String> edgeList,
        @WebParam(name = "lastMessageID", targetNamespace = "")
        int lastMessageID);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "leave", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.Leave")
    @ResponseWrapper(localName = "leaveResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.LeaveResponse")
    public void leave(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getXML", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetXML")
    @ResponseWrapper(localName = "getXMLResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetXMLResponse")
    public String getXML();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "writeXML", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteXML")
    @ResponseWrapper(localName = "writeXMLResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteXMLResponse")
    public void writeXML(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTopoXML", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetTopoXML")
    @ResponseWrapper(localName = "getTopoXMLResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetTopoXMLResponse")
    public String getTopoXML();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "writeTopoXML", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteTopoXML")
    @ResponseWrapper(localName = "writeTopoXMLResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteTopoXMLResponse")
    public void writeTopoXML(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "writeAlternativeXML", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteAlternativeXML")
    @ResponseWrapper(localName = "writeAlternativeXMLResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteAlternativeXMLResponse")
    public void writeAlternativeXML(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "writeResults", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteResults")
    @ResponseWrapper(localName = "writeResultsResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.WriteResultsResponse")
    public void writeResults(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeNumber", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetNodeNumber")
    @ResponseWrapper(localName = "getNodeNumberResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetNodeNumberResponse")
    public int getNodeNumber();

    /**
     * 
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCounter", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetCounter")
    @ResponseWrapper(localName = "getCounterResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetCounterResponse")
    public long getCounter();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLostPackagesCounter", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetLostPackagesCounter")
    @ResponseWrapper(localName = "getLostPackagesCounterResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetLostPackagesCounterResponse")
    public int getLostPackagesCounter();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWaitingMessages", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetWaitingMessages")
    @ResponseWrapper(localName = "getWaitingMessagesResponse", targetNamespace = "http://server.stat.gossip/", className = "gossip.stat.client.soap.GetWaitingMessagesResponse")
    public String getWaitingMessages();

}
